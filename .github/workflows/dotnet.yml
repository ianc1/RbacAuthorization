name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types:
      - published

env:
  DotNetSdkVersion: 8.0.x
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DotNetSdkVersion }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  pack:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DotNetSdkVersion }}

    - name: Restore dependencies
      run: dotnet restore

    - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} .\src\RbacAuthorization\

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ pack ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
